{"ast":null,"code":"var _jsxFileName = \"/Users/peternguyen/Documents/GitHub/Rizzup/frontend/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./app\";\n\n// const mongoose = require(\"mongoose\");\n// mongoose.connect(\n//   \"mongodb://localhost:27017/\",\n//   {\n//     dbName: \"test\",\n//     useNewUrlParser: true,\n//     useUnifiedTopology: true,\n//   },\n//   (err) => (err ? console.log(err) : console.log(\"Connected to test database\"))\n// );\n\n// // Schema for users of app\n// const UserSchema = new mongoose.Schema({\n//   name: {\n//     type: String,\n//     required: true,\n//   },\n//   email: {\n//     type: String,\n//     required: true,\n//     unique: true,\n//   },\n//   date: {\n//     type: Date,\n//     default: Date.now,\n//   },\n// });\n// const User = mongoose.model(\"User\", userSchema);\n\n// module.exports = User;\n\n// const express = require(\"express\");\n// const app = express();\n// const cors = require(\"cors\");\n// console.log(\"App listen at port 3000\");\n// app.use(express.json());\n// app.use(cors());\n// app.get(\"/\", (req, resp) => {\n//   resp.send(\"App is Working\");\n//   // You can check backend is working or not by\n//   // entering http://loacalhost:5000\n\n//   // If you see App is working means\n//   // backend working properly\n// });\n\n// app.post(\"/register\", async (req, resp) => {\n//   try {\n//     const user = new User(req.body);\n//     let result = await user.save();\n//     result = result.toObject();\n//     if (result) {\n//       delete result.password;\n//       resp.send(req.body);\n//       console.log(result);\n//     } else {\n//       console.log(\"User already register\");\n//     }\n//   } catch (e) {\n//     resp.send(\"Something Went Wrong\");\n//   }\n// });\n// app.listen(3000);\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 72,\n  columnNumber: 3\n}, this));","map":{"version":3,"names":["React","ReactDOM","App","jsxDEV","_jsxDEV","root","createRoot","document","getElementById","render","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/peternguyen/Documents/GitHub/Rizzup/frontend/src/index.js"],"sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./app\";\n\n// const mongoose = require(\"mongoose\");\n// mongoose.connect(\n//   \"mongodb://localhost:27017/\",\n//   {\n//     dbName: \"test\",\n//     useNewUrlParser: true,\n//     useUnifiedTopology: true,\n//   },\n//   (err) => (err ? console.log(err) : console.log(\"Connected to test database\"))\n// );\n\n// // Schema for users of app\n// const UserSchema = new mongoose.Schema({\n//   name: {\n//     type: String,\n//     required: true,\n//   },\n//   email: {\n//     type: String,\n//     required: true,\n//     unique: true,\n//   },\n//   date: {\n//     type: Date,\n//     default: Date.now,\n//   },\n// });\n// const User = mongoose.model(\"User\", userSchema);\n\n// module.exports = User;\n\n// const express = require(\"express\");\n// const app = express();\n// const cors = require(\"cors\");\n// console.log(\"App listen at port 3000\");\n// app.use(express.json());\n// app.use(cors());\n// app.get(\"/\", (req, resp) => {\n//   resp.send(\"App is Working\");\n//   // You can check backend is working or not by\n//   // entering http://loacalhost:5000\n\n//   // If you see App is working means\n//   // backend working properly\n// });\n\n// app.post(\"/register\", async (req, resp) => {\n//   try {\n//     const user = new User(req.body);\n//     let result = await user.save();\n//     result = result.toObject();\n//     if (result) {\n//       delete result.password;\n//       resp.send(req.body);\n//       console.log(result);\n//     } else {\n//       console.log(\"User already register\");\n//     }\n//   } catch (e) {\n//     resp.send(\"Something Went Wrong\");\n//   }\n// });\n// app.listen(3000);\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,IAAI,GAAGJ,QAAQ,CAACK,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,eACTL,OAAA,CAACJ,KAAK,CAACU,UAAU;EAAAC,QAAA,eACfP,OAAA,CAACF,GAAG;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACS,CACpB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}