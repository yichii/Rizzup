{"ast":null,"code":"var _jsxFileName = \"/Users/peternguyen/Documents/GitHub/Rizzup/frontend/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./app\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mongoose = require(\"mongoose\");\nmongoose.connect(\"mongodb://localhost:27017/\", {\n  dbName: \"test\",\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n}, err => err ? console.log(err) : console.log(\"Connected to test database\"));\n\n// Schema for users of app\nconst UserSchema = new mongoose.Schema({\n  name: {\n    type: String,\n    required: true\n  },\n  email: {\n    type: String,\n    required: true,\n    unique: true\n  },\n  date: {\n    type: Date,\n    default: Date.now\n  }\n});\nconst User = mongoose.model(\"users\", UserSchema);\nUser.createIndexes();\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 38,\n  columnNumber: 3\n}, this));","map":{"version":3,"names":["React","ReactDOM","App","jsxDEV","_jsxDEV","mongoose","require","connect","dbName","useNewUrlParser","useUnifiedTopology","err","console","log","UserSchema","Schema","name","type","String","required","email","unique","date","Date","default","now","User","model","createIndexes","root","createRoot","document","getElementById","render","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/peternguyen/Documents/GitHub/Rizzup/frontend/src/index.js"],"sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./app\";\n\nconst mongoose = require(\"mongoose\");\nmongoose.connect(\n  \"mongodb://localhost:27017/\",\n  {\n    dbName: \"test\",\n    useNewUrlParser: true,\n    useUnifiedTopology: true,\n  },\n  (err) => (err ? console.log(err) : console.log(\"Connected to test database\"))\n);\n\n// Schema for users of app\nconst UserSchema = new mongoose.Schema({\n  name: {\n    type: String,\n    required: true,\n  },\n  email: {\n    type: String,\n    required: true,\n    unique: true,\n  },\n  date: {\n    type: Date,\n    default: Date.now,\n  },\n});\nconst User = mongoose.model(\"users\", UserSchema);\nUser.createIndexes();\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,QAAQ,GAAGC,OAAO,CAAC,UAAU,CAAC;AACpCD,QAAQ,CAACE,OAAO,CACd,4BAA4B,EAC5B;EACEC,MAAM,EAAE,MAAM;EACdC,eAAe,EAAE,IAAI;EACrBC,kBAAkB,EAAE;AACtB,CAAC,EACAC,GAAG,IAAMA,GAAG,GAAGC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,GAAGC,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAC7E,CAAC;;AAED;AACA,MAAMC,UAAU,GAAG,IAAIT,QAAQ,CAACU,MAAM,CAAC;EACrCC,IAAI,EAAE;IACJC,IAAI,EAAEC,MAAM;IACZC,QAAQ,EAAE;EACZ,CAAC;EACDC,KAAK,EAAE;IACLH,IAAI,EAAEC,MAAM;IACZC,QAAQ,EAAE,IAAI;IACdE,MAAM,EAAE;EACV,CAAC;EACDC,IAAI,EAAE;IACJL,IAAI,EAAEM,IAAI;IACVC,OAAO,EAAED,IAAI,CAACE;EAChB;AACF,CAAC,CAAC;AACF,MAAMC,IAAI,GAAGrB,QAAQ,CAACsB,KAAK,CAAC,OAAO,EAAEb,UAAU,CAAC;AAChDY,IAAI,CAACE,aAAa,CAAC,CAAC;AAEpB,MAAMC,IAAI,GAAG5B,QAAQ,CAAC6B,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,eACT7B,OAAA,CAACJ,KAAK,CAACkC,UAAU;EAAAC,QAAA,eACf/B,OAAA,CAACF,GAAG;IAAAkC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACS,CACpB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}